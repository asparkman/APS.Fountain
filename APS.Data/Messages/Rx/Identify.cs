using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace APS.Data.Messages.Rx
{
    /// <summary>
    /// This message responds to a request from the computer to identify itself 
    /// as an Arduino.  It is done to allow for the program to search multiple 
    /// ports.
    /// </summary>
    public class Identify : RxMessage
    {
        /// <summary>
        /// Creates a bare-bone message of the <c>Identify</c> type.
        /// </summary>
        public Identify()
            : base()
        {
        }

        /// <summary>
        /// Creates an object that represents a <c>Identify</c> message from 
        /// raw bytes.
        /// </summary>
        /// <param name="vals">Raw bytes representing a <c>Identify</c> 
        /// message.</param>
        public Identify(byte[] vals)
            : base(vals)
        {
        }

        /// <summary>
        /// The receive message type.
        /// </summary>
        public override RxType Type { get { return RxType.IDENTIFY; } }
        /// <summary>
        /// The number of information bytes that the receive message uses.
        /// </summary>
        public override byte Size { get { return 3; } }

        /// <summary>
        /// The reply to the first randomly generated byte sent in the 
        /// transfer message's transfer message.
        /// </summary>
        public byte Random0 { get { return this[RxField.INFO_1]; } set { this[RxField.INFO_1] = value; } }
        /// <summary>
        /// The reply to the second randomly generated byte sent in the 
        /// transfer message's transfer message.
        /// </summary>
        public byte Random1 { get { return this[RxField.INFO_2]; } set { this[RxField.INFO_2] = value; } }

        /// <summary>
        /// Creates a clone of this receive message.
        /// </summary>
        /// <returns>An exact copy of the receive message.</returns>
        public override object Clone()
        {
            return CloneTo(new Identify());
        }
    }
}
