using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace APS.Data.Messages.Tx
{
    /// <summary>
    /// This message represents a request to the Arduino from the computer to 
    /// identify itself as the Arduino.  This is meant to allow the computer to
    /// search multiple ports.
    /// </summary>
    public class Identify : TxMessage
    {
        /// <summary>
        /// Creates a bare-bone message of the <c>Identify</c> type.
        /// </summary>
        public Identify()
            : base()
        {
        }

        /// <summary>
        /// Creates an object that represents a <c>Identify</c> message from 
        /// raw bytes.
        /// </summary>
        /// <param name="vals">Raw bytes representing a <c>Identify</c> 
        /// message.</param>
        public Identify(byte[] vals)
            : base(vals)
        {
        }

        /// <summary>
        /// The transfer message type.
        /// </summary>
        public override TxType Type { get { return TxType.IDENTIFY; } }
        /// <summary>
        /// The number of information bytes that the transfer message uses.
        /// </summary>
        public override byte Size { get { return 3; } }

        /// <summary>
        /// The first randomly generated byte.  This is to be used by the 
        /// Arduino to generate the reply to this identification request.
        /// </summary>
        public byte Random0 { get { return this[TxField.INFO_1]; } set { this[TxField.INFO_1] = value; } }
        /// <summary>
        /// The second randomly generated byte.  This is to be used by the 
        /// Arduino to generate the reply to this identification request.
        /// </summary>
        public byte Random1 { get { return this[TxField.INFO_2]; } set { this[TxField.INFO_2] = value; } }

        /// <summary>
        /// Creates a clone of this transfer message.
        /// </summary>
        /// <returns>An exact copy of the transfer message.</returns>
        public override object Clone()
        {
            return CloneTo(new Identify());
        }
    }
}
